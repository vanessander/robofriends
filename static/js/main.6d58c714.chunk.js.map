{"version":3,"sources":["components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","item","i","SearchBox","searchTerm","onSearch","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","state","hasError","this","setState","React","Component","App","handleSearch","event","target","value","isLoading","fetch","then","res","json","searchedRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,UACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCOLI,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BACKA,EAAOC,KAAI,SAASC,EAAMC,GACvB,OACI,cAAC,EAAD,CAAoBV,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,OAA9D,UAAcQ,EAAd,YCQLC,EAbG,SAAC,GAA6B,EAA3BC,WAA4B,IAAhBC,EAAe,EAAfA,SAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIW,KAAK,SACLC,YAAY,oBACZZ,UAAU,mCACVa,SAAUH,OCCXI,G,YARA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKf,UAAU,WAAWgB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAA3F,SACKJ,MCmBEK,E,kDAtBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG9B,WACI,OACIC,KAAKF,MAAMC,SACP,0DAEAC,KAAKH,MAAMN,a,GAjBAW,IAAMC,WCiDlBC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAACC,GACd,EAAKL,SAAS,CAAEhB,WAAYqB,EAAMC,OAAOC,SARzC,EAAKV,MAAQ,CACXW,WAAW,EACX7B,OAAQ,GACRK,WAAY,IALF,E,qDAad,WAAqB,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAI,EAAKZ,SAAS,CAAErB,OAAQiC,EAAMJ,WAAW,S,oBAG3D,WAAU,IAAD,OACDK,EAAiBd,KAAKF,MAAMlB,OAAOmC,QAAO,SAAAC,GAC9C,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKpB,MAAMb,WAAWgC,kBAGjE,OACE,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,WAAYe,KAAKF,MAAMb,WAAYC,SAAUc,KAAKK,eAE5DL,KAAKF,MAAMW,UACV,4CAEA,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU7B,OAAQkC,e,GAnChBZ,IAAMC,WCKTgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6d58c714.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"Robot\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {robots.map(function(item, i) {\r\n                return (\r\n                    <Card key={`${i}x`} id={item.id} name={item.name} email={item.email} />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({ searchTerm, onSearch }) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                type=\"search\" \r\n                placeholder=\"search for robots\" \r\n                className=\"pa2 ba b--green bg-lightest-blue\"\r\n                onChange={onSearch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nimport './Scroll.css'\r\n\r\nconst Scroll = ({ children }) => {\r\n    return (\r\n        <div className=\"scroller\" style={{ overflowY: 'scroll', border: '2px solid black', height: '500px' }}>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nclass ErrorBoundry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.hasError ? (\r\n                <h1>Oooops. That is not good</h1>\r\n            ) : (\r\n                this.props.children\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      robots: [],\r\n      searchTerm: '',\r\n    }\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    this.setState({ searchTerm: event.target.value })\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => res.json())\r\n      .then(json => this.setState({ robots: json, isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const searchedRobots = this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchTerm.toLowerCase());\r\n    })\r\n\r\n    return (\r\n      <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchTerm={this.state.searchTerm} onSearch={this.handleSearch}/>\r\n\r\n          {this.state.isLoading ? (\r\n            <h1>Loading...</h1>\r\n          ) : (\r\n            <Scroll>\r\n              <ErrorBoundry>\r\n                <CardList robots={searchedRobots} />\r\n              </ErrorBoundry>\r\n            </Scroll>\r\n          )}\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}